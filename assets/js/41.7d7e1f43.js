(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{823:function(v,_,e){"use strict";e.r(_);var t=e(112),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"webgl"}},[v._v("WebGL "),e("a",{staticClass:"header-anchor",attrs:{href:"#webgl"}},[v._v("#")])]),v._v(" "),e("p",[v._v("WebGL 是一组基于 JavaScript 语言的"),e("code",[v._v("图形规范")]),v._v("，浏览器厂商按照这组规范进行实现，为 Web 开发者提供一套 3D 图形相关的 API。\n这些 API 能够让 Web 开发者使用 JavaScript 语言直接和显卡（GPU）进行通信。当然 WebGL 的 GPU 部分也有对应的编程语言，简称 "),e("code",[v._v("GLSL")]),v._v("。我们用它来编写运行在 GPU 上的着色器程序，着色器接收 CPU（WebGL 使用 JavaScript）传递过来的数据，然后对这些数据进行流水线处理，最终显示在屏幕上。")]),v._v(" "),e("h2",{attrs:{id:"glsl"}},[v._v("GLSL "),e("a",{staticClass:"header-anchor",attrs:{href:"#glsl"}},[v._v("#")])]),v._v(" "),e("p",[v._v("GLSL 全称 "),e("code",[v._v("OpenGL Shading Language")]),v._v("，OpenGL 着色语言，用来在 OpenGL 编写着色器程序的语言。着色器程序是在显卡（GPU）上运行的简短程序，代替了 GPU 固定"),e("code",[v._v("渲染管线")]),v._v("的一部分，使 GPU 渲染过程中的某些部分允许开发者通过编程进行控制。")]),v._v(" "),e("p",[e("img",{attrs:{src:"webgl-1.png",alt:"webgl-1"}})]),v._v(" "),e("p",[v._v("上图简单演示了 WebGL 对一个红色三角形的渲染过程，绿色部分为开发者可以通过编程控制的部分：")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("JavaScript 程序")]),v._v("：处理着色器需要的"),e("code",[v._v("顶点坐标")]),v._v("、"),e("code",[v._v("法向量")]),v._v("、"),e("code",[v._v("颜色")]),v._v("、"),e("code",[v._v("纹理")]),v._v("等信息，并负责为着色器提供这些数据。")]),v._v(" "),e("li",[e("strong",[v._v("顶点着色器")]),v._v("：接收 "),e("code",[v._v("JavaScript")]),v._v(" 传递过来的"),e("code",[v._v("顶点信息")]),v._v("，将顶点绘制到对应坐标。")]),v._v(" "),e("li",[e("strong",[v._v("图元装配阶段")]),v._v("：将顶点装配成指定"),e("code",[v._v("图元类型")]),v._v("，如三角形图元。")]),v._v(" "),e("li",[e("strong",[v._v("光栅化阶段")]),v._v("：将三角形内部区域用空像素进行填充。")]),v._v(" "),e("li",[e("strong",[v._v("片元着色器")]),v._v("：为三角形内部的像素填充颜色信息。")])]),v._v(" "),e("p",[v._v("一般情况下，最初的顶点坐标是相对于"),e("code",[v._v("模型中心")]),v._v("的，不能直接传递到着色器中，我们需要对"),e("code",[v._v("顶点坐标")]),v._v("按照一系列步骤执行"),e("code",[v._v("模型转换")]),v._v("，"),e("code",[v._v("视图转换")]),v._v("、"),e("code",[v._v("投影转换")]),v._v("，转换之后的坐标才是 WebGL 可接受的坐标，即"),e("code",[v._v("裁剪空间坐标")]),v._v("。")]),v._v(" "),e("p",[v._v("实际上，对顶点信息的变换操作既可以在 "),e("code",[v._v("JavaScript")]),v._v(" 中进行，也可以在"),e("code",[v._v("着色器程序")]),v._v("中进行。通常我们都是在 "),e("code",[v._v("JavaScript")]),v._v(" 中生成一个包含了所有变换的"),e("code",[v._v("最终变换矩阵")]),v._v("，然后将该矩阵传递给着色器，利用 "),e("code",[v._v("GPU")]),v._v(" 并行计算优势对所有顶点执行变化。")])])}),[],!1,null,null,null);_.default=a.exports}}]);